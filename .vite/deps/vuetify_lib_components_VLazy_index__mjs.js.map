{
  "version": 3,
  "sources": ["../../node_modules/vuetify/src/components/VLazy/VLazy.tsx"],
  "sourcesContent": ["// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVLazyProps = propsFactory({\n  modelValue: Boolean,\n  options: {\n    type: Object as PropType<IntersectionObserverInit>,\n    // For more information on types, navigate to:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    default: () => ({\n      root: undefined,\n      rootMargin: undefined,\n      threshold: undefined,\n    }),\n  },\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n  ...makeTransitionProps({ transition: 'fade-transition' }),\n}, 'VLazy')\n\nexport const VLazy = genericComponent()({\n  name: 'VLazy',\n\n  directives: { intersect },\n\n  props: makeVLazyProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { dimensionStyles } = useDimension(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n\n    function onIntersect (isIntersecting: boolean) {\n      if (isActive.value) return\n\n      isActive.value = isIntersecting\n    }\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-lazy',\n          props.class,\n        ]}\n        v-intersect={[\n          {\n            handler: onIntersect,\n            options: props.options,\n          },\n          null,\n          isActive.value ? [] : ['once'],\n        ]}\n        style={[\n          dimensionStyles.value,\n          props.style,\n        ]}\n      >\n        { isActive.value && (\n          <MaybeTransition transition={ props.transition } appear>\n            { slots.default?.() }\n          </MaybeTransition>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VLazy = InstanceType<typeof VLazy>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBO,IAAMA,iBAAiBC,aAAa;EACzCC,YAAYC;EACZC,SAAS;IACPC,MAAMC;;;IAGNC,SAASA,OAAO;MACdC,MAAMC;MACNC,YAAYD;MACZE,WAAWF;IACb;EACF;EAEA,GAAGG,mBAAmB;EACtB,GAAGC,mBAAmB;EACtB,GAAGC,aAAa;EAChB,GAAGC,oBAAoB;IAAEC,YAAY;EAAkB,CAAC;AAC1D,GAAG,OAAO;AAEH,IAAMC,QAAQC,iBAAiB,EAAE;EACtCC,MAAM;EAENC,YAAY;IAAEC;EAAU;EAExBC,OAAOtB,eAAe;EAEtBuB,OAAO;IACL,qBAAsBC,WAAmB;EAC3C;EAEAC,MAAOH,OAAKI,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAM;MAAEE;IAAgB,IAAIC,aAAaP,KAAK;AAE9C,UAAMQ,WAAWC,gBAAgBT,OAAO,YAAY;AAEpD,aAASU,YAAaC,gBAAyB;AAC7C,UAAIH,SAASN,MAAO;AAEpBM,eAASN,QAAQS;IACnB;AAEAC,cAAU,MAAAC,eAAAC,YAAAd,MAAAe,KAAA;MAAA,SAEC,CACL,UACAf,MAAMgB,KAAK;MACZ,SASM,CACLV,gBAAgBJ,OAChBF,MAAMiB,KAAK;IACZ,GAAA;MAAAhC,SAAAA,MAAA,CAECuB,SAASN,SAAKY,YAAAI,iBAAA;QAAA,cACgBlB,MAAMN;QAAU,UAAA;MAAA,GAAA;QAAAT,SAAAA,MAAA;;AAAA,mBAC1CoB,WAAMpB,YAANoB,8BAAiB;;MAAA,CAAA,CAEtB;IAAA,CAAA,GAAA,CAAA,CAAAc,iBAAA,WAAA,GAhBC;MACEC,SAASV;MACT5B,SAASkB,MAAMlB;IACjB,GACA,IAAI,CAAA,CAAA,CAcT;AAED,WAAO,CAAC;EACV;AACF,CAAC;",
  "names": ["makeVLazyProps", "propsFactory", "modelValue", "Boolean", "options", "type", "Object", "default", "root", "undefined", "rootMargin", "threshold", "makeComponentProps", "makeDimensionProps", "makeTagProps", "makeTransitionProps", "transition", "VLazy", "genericComponent", "name", "directives", "intersect", "props", "emits", "value", "setup", "_ref", "slots", "dimensionStyles", "useDimension", "isActive", "useProxiedModel", "onIntersect", "isIntersecting", "useRender", "_withDirectives", "_createVNode", "tag", "class", "style", "MaybeTransition", "_resolveDirective", "handler"]
}
